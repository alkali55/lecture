<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
<!-- 	이곳이 디스패쳐 서블릿 -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
<!-- 	어노테이션(@) 방식으로 처리한다 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	정적파일 경로 지정 (/resources 경로로 들어오는 요청은 정적파일을 요구하는 것이라고 생각하고, 스프링mvc에서 처리하지 않겠다는 의미) -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
<!-- 	component를 스캔한다. 즉 아래의 패키지를 스캔하여 객체 확보 -->
	<context:component-scan base-package="com.springbasic.controller" />
	<context:component-scan base-package="com.springbasic.member.controller" />
	
	
	
</beans:beans>
