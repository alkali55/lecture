/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-15 04:14:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.diary;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/lecture/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/legacy-diary/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1743645899506L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>다이어리 목록</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function(){\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(\".finishedCheckbox\").change(function(){\r\n");
      out.write("			\r\n");
      out.write("			let dno = $(this).data(\"dno\");\r\n");
      out.write("			let checked = $(this).is(\":checked\"); // true | false\r\n");
      out.write("			\r\n");
      out.write("			console.log(dno, checked);\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("		          url: '/diary/updateFinished', // 데이터가 송수신될 서버의 주소\r\n");
      out.write("		          type: \"POST\", // 통신 방식 (GET, POST, PUT, DELETE)\r\n");
      out.write("				  data: {\r\n");
      out.write("					  \"dno\" : dno,\r\n");
      out.write("					  \"finished\" : checked\r\n");
      out.write("				  },  // 보내는 데이터\r\n");
      out.write("		          // async: false, // 동기 통신 방식\r\n");
      out.write("		          success: function (data) {\r\n");
      out.write("		            // 통신이 성공하면 수행할 함수\r\n");
      out.write("		            console.log(data);\r\n");
      out.write("		            if (data == 'success'){\r\n");
      out.write("		            	if (checked) {\r\n");
      out.write("		            		$(\"#dlist-\" + dno).addClass(\"completed\");\r\n");
      out.write("		            	} else {\r\n");
      out.write("		            		$(\"#dlist-\" + dno).removeClass(\"completed\");\r\n");
      out.write("		            	}\r\n");
      out.write("		            	self.location='/diary/list';\r\n");
      out.write("		            }\r\n");
      out.write("		            \r\n");
      out.write("		          },\r\n");
      out.write("		          error: function () {},\r\n");
      out.write("		          complete: function () {\r\n");
      out.write("		          },\r\n");
      out.write("	      	});\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 수정(title, dueDate)\r\n");
      out.write("		$(\".modifyBtn\").click(function(){\r\n");
      out.write("			let dno = $(this).data(\"dno\"); // data-XXXX -> data(\"XXXX\")\r\n");
      out.write("			let title = $(this).data(\"title\");\r\n");
      out.write("			let date = $(this).data(\"date\");\r\n");
      out.write("			\r\n");
      out.write("			console.log(dno, title, date);\r\n");
      out.write("			\r\n");
      out.write("			$(\"#modifyDno\").val(dno);\r\n");
      out.write("			$(\"#modifyTitle\").val(title);\r\n");
      out.write("			$(\"#modifyDueDate\").val(date); // 2025-04-16\r\n");
      out.write("			\r\n");
      out.write("			$(\"#modifyModal\").show();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(\".closeModal\").click(function(){\r\n");
      out.write("			$(\"#modifyModal\").hide();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#searchBtn\").click(function(){\r\n");
      out.write("			$(\"#searchFormCard\").toggle();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function modifyDiary(){\r\n");
      out.write("		let dno = $(\"#modifyDno\").val();\r\n");
      out.write("		let title = $(\"#modifyTitle\").val();\r\n");
      out.write("		let dueDateStr = $(\"#modifyDueDate\").val();\r\n");
      out.write("		\r\n");
      out.write("		// 유효성검사\r\n");
      out.write("		if (title == \"\" || dueDateStr == \"\"){\r\n");
      out.write("			alert(\"제목, 날짜를 입력하세요\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 수정 요청\r\n");
      out.write("		$.ajax({\r\n");
      out.write("	          url: '/diary/modify', // 데이터가 송수신될 서버의 주소\r\n");
      out.write("	          type: \"POST\", // 통신 방식 (GET, POST, PUT, DELETE)\r\n");
      out.write("			  data: {\r\n");
      out.write("				  \"dno\" : dno,\r\n");
      out.write("				  \"title\" : title,\r\n");
      out.write("				  \"dueDateStr\" : dueDateStr \r\n");
      out.write("			  },  // 보내는 데이터\r\n");
      out.write("			  dataType: \"text\",\r\n");
      out.write("	          // async: false, // 동기 통신 방식\r\n");
      out.write("	          success: function (data) {\r\n");
      out.write("	            // 통신이 성공하면 수행할 함수\r\n");
      out.write("	            console.log(data);\r\n");
      out.write("	            \r\n");
      out.write("	            $(\"#modifyModal\").hide();\r\n");
      out.write("	            self.location='/diary/list';\r\n");
      out.write("	            \r\n");
      out.write("	            \r\n");
      out.write("	          },\r\n");
      out.write("	          error: function () {},\r\n");
      out.write("	          complete: function () {\r\n");
      out.write("	          },\r\n");
      out.write("    	});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("	li.completed .titleDiv,\r\n");
      out.write("	li.completed .dueDateDiv{\r\n");
      out.write("		color : gray;\r\n");
      out.write("		text-decoration : line-through;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"container mt-5\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			\r\n");
      out.write("			<h1>다이어리 목록</h1>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"mb-3\">\r\n");
      out.write("				<button class=\"btn btn-primary\" id=\"searchBtn\">🔍검색옵션</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"card\" style=\"display:none;\" id=\"searchFormCard\">\r\n");
      out.write("			    <div class=\"card-body\">\r\n");
      out.write("			    	<form action=\"/diary/search\" method=\"POST\">\r\n");
      out.write("			    		<div class=\"mb-3 mt-3\">\r\n");
      out.write("							    <label for=\"searchWord\" class=\"form-label\">제목 검색 :</label>\r\n");
      out.write("							    <input type=\"text\" class=\"form-control\" id=\"searchWord\" placeholder=\"검색어를 입력하세요...\" name=\"searchWord\">\r\n");
      out.write("							    <input type=\"hidden\" name=\"searchTypes\" value=\"title\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div>\r\n");
      out.write("							<label for=\"finishedSelect\" class=\"form-label\">완료여부 (select one):</label>\r\n");
      out.write("						    <select class=\"form-select\" id=\"finishedSelect\" name=\"finished\">\r\n");
      out.write("						      <option value=\"\">모두보기</option>\r\n");
      out.write("						      <option value=\"0\">미완료</option>\r\n");
      out.write("						      <option value=\"1\">완료</option>\r\n");
      out.write("						    </select>\r\n");
      out.write("					    </div>\r\n");
      out.write("					    <div>\r\n");
      out.write("					    	<label for=\"from\" class=\"form-label\">dueDate From :</label>\r\n");
      out.write("							<input type=\"date\" class=\"form-control\" id=\"from\" name=\"from\">\r\n");
      out.write("					    </div>\r\n");
      out.write("					    <div>\r\n");
      out.write("					    	<label for=\"to\" class=\"form-label\">dueDate To :</label>\r\n");
      out.write("							<input type=\"date\" class=\"form-control\" id=\"to\" name=\"to\">\r\n");
      out.write("					    </div>\r\n");
      out.write("					    \r\n");
      out.write("					    <div>\r\n");
      out.write("					    	<button type=\"submit\" class=\"btn btn-primary\">검색</button>\r\n");
      out.write("					    </div>\r\n");
      out.write("					</form>\r\n");
      out.write("			    </div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<ul class=\"list-group\">\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- The Modal -->\r\n");
      out.write("	<div class=\"modal\" id=\"modifyModal\">\r\n");
      out.write("	  <div class=\"modal-dialog\">\r\n");
      out.write("	    <div class=\"modal-content\">\r\n");
      out.write("	\r\n");
      out.write("	      <!-- Modal Header -->\r\n");
      out.write("	      <div class=\"modal-header\">\r\n");
      out.write("	        <h4 class=\"modal-title\">Modal Heading</h4>\r\n");
      out.write("	        <button type=\"button\" class=\"btn-close closeModal\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("	      </div>\r\n");
      out.write("	\r\n");
      out.write("	      <!-- Modal body -->\r\n");
      out.write("	      <div class=\"modal-body\">\r\n");
      out.write("	        Modal body..\r\n");
      out.write("	        \r\n");
      out.write("	        <input type=\"hidden\" id=\"modifyDno\" name=\"dno\"/>\r\n");
      out.write("	        <div class=\"mb-3 mt-3\">\r\n");
      out.write("	        	<label for=\"modifyTitle\" class=\"form-label\">Title:</label>\r\n");
      out.write("	        	<input type=\"text\" class=\"form-control\" id=\"modifyTitle\" name=\"title\">\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <div class=\"mb-3\">\r\n");
      out.write("	        	<label for=\"modifyDueDate\" class=\"form-label\">Due Date:</label>\r\n");
      out.write("	        	<input type=\"date\" class=\"form-control\" id=\"modifyDueDate\" name=\"dueDateStr\">\r\n");
      out.write("	        </div>\r\n");
      out.write("	        \r\n");
      out.write("	      </div>\r\n");
      out.write("	\r\n");
      out.write("	      <!-- Modal footer -->\r\n");
      out.write("	      <div class=\"modal-footer\">\r\n");
      out.write("	        <button type=\"button\" class=\"btn btn-success\" onclick=\"modifyDiary();\">저장</button>\r\n");
      out.write("	        <button type=\"button\" class=\"btn btn-danger closeModal\" data-bs-dismiss=\"modal\">Close</button>\r\n");
      out.write("	      </div>\r\n");
      out.write("	\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/diary/list.jsp(172,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("diary");
    // /WEB-INF/views/diary/list.jsp(172,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/diary/list.jsp(172,4) '${diaryList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${diaryList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("    				<li class=\"list-group-item d-flex align-items-center ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.finished ? 'completed' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"  id=\"dlist-");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.dno }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("						<!--  체크박스 -->\r\n");
          out.write("	    				<input type=\"checkbox\" class=\"form-check-input finishedCheckbox\" data-dno=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.dno }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("	    				");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write(" />\r\n");
          out.write("	      				\r\n");
          out.write("	      				<div class=\"titleDiv\" >");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("	      				\r\n");
          out.write("    					<div class=\"dueDateDiv\">(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.dueDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")</div>\r\n");
          out.write("    					\r\n");
          out.write("    					<button type=\"button\" class=\"btn btn-outline-info btn-sm modifyBtn\"\r\n");
          out.write("    						data-dno=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.dno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("    						data-title=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("    						data-date=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.dueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">수정</button>\r\n");
          out.write("    				\r\n");
          out.write("    				</li>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /WEB-INF/views/diary/list.jsp(176,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${diary.finished }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("checked");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
