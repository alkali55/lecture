/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-24 04:15:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	$(function(){\r\n");
      out.write("		if(getParameter(\"signup\") == \"success\"){\r\n");
      out.write("			$(\"#myModal\").show();\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		if(getParameter(\"login\") == \"fail\"){\r\n");
      out.write("			$(\"#myModal2\").show();\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		$(\".closeModal\").click(function(){\r\n");
      out.write("			$(\"#myModal\").hide();\r\n");
      out.write("			$(\"#myModal2\").hide();\r\n");
      out.write("		})\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	function getParameter(queryName){\r\n");
      out.write("\r\n");
      out.write("		let returnVal = null;\r\n");
      out.write("		let url = location.href;\r\n");
      out.write("\r\n");
      out.write("		if (url.indexOf(\"?\") !== -1){\r\n");
      out.write("			// 쿼리스트링이 있는 경우\r\n");
      out.write("			let queryString = url.split(\"?\")[1];\r\n");
      out.write("			let queryStringArr  = queryString.split(\"&\");\r\n");
      out.write("\r\n");
      out.write("			for (let item of queryStringArr){\r\n");
      out.write("				// key=value\r\n");
      out.write("				if (item.split(\"=\")[0] == queryName){\r\n");
      out.write("					// 파라미터 이름이 있으면\r\n");
      out.write("					returnVal = item.split(\"=\")[1];\r\n");
      out.write("					break;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		return returnVal;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"container mt-5\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<h1>로그인</h1>\r\n");
      out.write("			\r\n");
      out.write("			<form action=\"login\" method=\"POST\">\r\n");
      out.write("			    <div class=\"mb-3 mt-3\">\r\n");
      out.write("			      <label for=\"memberId\">아이디:</label>\r\n");
      out.write("			      <input type=\"text\" class=\"form-control\" id=\"memberId\" placeholder=\"아이디를 입력하세요\" name=\"memberId\">\r\n");
      out.write("			    </div>\r\n");
      out.write("			    <div class=\"mb-3\">\r\n");
      out.write("			      <label for=\"memberPwd\">비밀번호:</label>\r\n");
      out.write("			      <input type=\"password\" class=\"form-control\" id=\"memberPwd\" placeholder=\"비밀번호를 입력하세요\" name=\"memberPwd\">\r\n");
      out.write("			    </div>\r\n");
      out.write("			    <button type=\"submit\" class=\"btn btn-primary\">로그인</button>\r\n");
      out.write("			    <button type=\"reset\" class=\"btn btn-secondary\">취소</button>\r\n");
      out.write("			  </form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- The Modal -->\r\n");
      out.write("	<div class=\"modal\" id=\"myModal\">\r\n");
      out.write("		<div class=\"modal-dialog\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("	\r\n");
      out.write("				<!-- Modal Header -->\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h4 class=\"modal-title\">회원가입 성공!</h4>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close closeModal\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<!-- Modal body -->\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					로그인을 하고 ToDoList를 이용해보세요!\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<!-- Modal footer -->\r\n");
      out.write("				<div class=\"modal-footer\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-success closeModal\" data-bs-dismiss=\"modal\">닫기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("	\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- The Modal2 -->\r\n");
      out.write("	<div class=\"modal\" id=\"myModal2\">\r\n");
      out.write("		<div class=\"modal-dialog\">\r\n");
      out.write("			<div class=\"modal-content\">\r\n");
      out.write("	\r\n");
      out.write("				<!-- Modal Header -->\r\n");
      out.write("				<div class=\"modal-header\">\r\n");
      out.write("					<h4 class=\"modal-title\">로그인 실패!</h4>\r\n");
      out.write("					<button type=\"button\" class=\"btn-close closeModal\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<!-- Modal body -->\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					아이디나 비밀번호가 올바르지 않습니다.\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<!-- Modal footer -->\r\n");
      out.write("				<div class=\"modal-footer\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-success closeModal\" data-bs-dismiss=\"modal\">닫기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("	\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
