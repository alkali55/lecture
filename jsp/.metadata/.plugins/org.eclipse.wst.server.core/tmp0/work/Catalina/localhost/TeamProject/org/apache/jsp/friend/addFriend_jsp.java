/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-02 06:55:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.friend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addFriend_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1743389494952L));
    _jspx_dependants.put("jar:file:/C:/lecture/jsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/TeamProject/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>친구저장</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\"#friendName\").blur(function() {\r\n");
      out.write("			isValidName();\r\n");
      out.write("		});\r\n");
      out.write("		$(\"#mobile\").blur(function() {\r\n");
      out.write("			isValidMobile();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	function outputError(msg, obj, idVal) {\r\n");
      out.write("	\r\n");
      out.write("		$(\"#\" + idVal).remove();\r\n");
      out.write("		let errorMsg = `<div class=\"alert alert-danger errorMsg\" id=\"${idVal}\">에러!!${msg}</div>`;\r\n");
      out.write("		$(errorMsg).insertAfter(obj);\r\n");
      out.write("		$(obj).focus();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function isValidName() {\r\n");
      out.write("		let result = false;\r\n");
      out.write("		let friendName = $(\"#friendName\").val();\r\n");
      out.write("		if (friendName == \"\") {\r\n");
      out.write("			outputError(\"이름은 반드시 입력해야 합니다!\", $(\"#friendName\"), \"nameErrorMsg\");\r\n");
      out.write("		} else {\r\n");
      out.write("			result = true;\r\n");
      out.write("			$(\"#nameErrorMsg\").remove();\r\n");
      out.write("		}\r\n");
      out.write("		return result;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function isValidMobile() {\r\n");
      out.write("		let result = false;\r\n");
      out.write("		let mobile = $(\"#mobile\").val();\r\n");
      out.write("		console.log(mobile);\r\n");
      out.write("		const mobileRegExp = /^(01[016789]{1})-?[0-9]{3,4}-?[0-9]{4}$/;\r\n");
      out.write("		console.log(mobileRegExp.test(mobile));\r\n");
      out.write("		if(!mobileRegExp.test(mobile)) {\r\n");
      out.write("			outputError(\"핸드폰 번호 형식이 아닙니다\", $(\"#mobile\"), \"mobileErrorMsg\");\r\n");
      out.write("		} else {\r\n");
      out.write("			$(\"#mobileErrorMsg\").remove();\r\n");
      out.write("			// 중복체크\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("		          url: \"");
      out.print(request.getContextPath());
      out.write("/mobileCheck.do\", // 데이터가 송수신될 서버의 주소\r\n");
      out.write("		          type: \"GET\", // 통신 방식 (GET, POST, PUT, DELETE)\r\n");
      out.write("				  data: { // 서버에 전송할 데이터\r\n");
      out.write("					'userInputMobile': mobile\r\n");
      out.write("					},\r\n");
      out.write("				  async: false,\r\n");
      out.write("		          dataType: \"json\", // 수신받을 데이터 타입 (MIME TYPE)\r\n");
      out.write("		          success: function (data) {\r\n");
      out.write("		            // 통신이 성공하면 수행할 함수\r\n");
      out.write("		            console.log(data);\r\n");
      out.write("		            if (data.isDuplicated == 'true') {\r\n");
      out.write("						$(\"#mobile\").val('');\r\n");
      out.write("						outputError(\"핸드폰 번호가 중복됩니다!\", $(\"#mobile\"), \"mobileErrorMsg\");\r\n");
      out.write("					} else if (data.isDuplicated == 'false') {\r\n");
      out.write("						result = true;\r\n");
      out.write("					}\r\n");
      out.write("		          },\r\n");
      out.write("		          error: function () {},\r\n");
      out.write("		          complete: function () {},\r\n");
      out.write("		        });\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		return result;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function isValid() {\r\n");
      out.write("		\r\n");
      out.write("		let result = false;\r\n");
      out.write("		// 유효성검사(이름, 전화번호)\r\n");
      out.write("		if (isValidName() && isValidMobile()) {\r\n");
      out.write("			result = true;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		return result;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"container mt-3\">\r\n");
      out.write("	  <h1>친구 저장</h1>\r\n");
      out.write("	  <form action=\"");
      out.print(request.getContextPath());
      out.write("/save.do\" method=\"post\">\r\n");
      out.write("	    <div class=\"mb-3 mt-3\">\r\n");
      out.write("	      <label for=\"friendName\">이름: </label>\r\n");
      out.write("	      <input type=\"text\" class=\"form-control\" id=\"friendName\" placeholder=\"friendName을 입력하세요\" name=\"friendName\">\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div class=\"mb-3 mt-3\">\r\n");
      out.write("	      <label for=\"mobile\">전화번호: </label>\r\n");
      out.write("	      <input type=\"text\" class=\"form-control\" id=\"mobile\" placeholder=\"mobile을 입력하세요\" name=\"mobile\">\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div class=\"mb-3 mt-3\">\r\n");
      out.write("	      <label for=\"addr\">주소: </label>\r\n");
      out.write("	      <input type=\"text\" class=\"form-control\" id=\"addr\" placeholder=\"addr 입력하세요\" name=\"addr\">\r\n");
      out.write("	    </div>\r\n");
      out.write("	    \r\n");
      out.write("\r\n");
      out.write("	    <button type=\"submit\" class=\"btn btn-primary\" onclick=\"return isValid();\">저장</button>\r\n");
      out.write("	    <button type=\"reset\" class=\"btn btn-danger\">취소</button>\r\n");
      out.write("	  </form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
